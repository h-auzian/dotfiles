###############################################################################

# Config with extra modifiers, plus extra actions for existing ones.
# The capslock key acts as escape on tap and as an extra layer on hold.

[ids]
*

[global]
overload_tap_timeout = 0

[main]
capslock = overloadt(leftExtraLayer, esc, 200)
; = overloadt(rightExtraLayer, ;, 200)
' = overloadt(rightSymbolsLayer, ', 200)

################################################################################

# Since the capslock key now acts a modifier, an alternative way of toggling it
# is required, which can be done in several ways.

[shift]
capslock = capslock

[alt]
capslock = capslock

[rightExtraLayer]
capslock = capslock

###############################################################################

# Layer while holding capslock, useful to have an extra left pinky modifier.
# Mostly used for terminal commands while using tmux, with some general
# commands for common applications. Any unspecified key will behave like
# holding down Alt-Gr.

[leftExtraLayer:G]

# Tmux.
u = A-S-u
i = A-S-i
o = A-S-o
p = A-S-p
j = A-S-j
k = A-S-k
l = A-S-l
; = A-S-;

# Forward slash (/).
. = S-7

# Repeat last command.
d = macro(up enter)

# Cancel command.
c = C-c

# Clear terminal.
f = C-l

# Change tabs on most applications.
# Still a little uncomfortable, but better than doing Shift+Ctrl+Tab with the
# left hand while using the mouse with the right hand.
q = S-C-tab
e = C-tab

# Close tab on most applications.
w = C-w

# Close application.
x = A-f4

###############################################################################

# Layer while holding the ; key (Ã± on a spanish keyboard), to have a right
# pinky modifier. Used for OS-wide commands, like switching virtual desktops,
# copy/pasting text, etc.

[rightExtraLayer]

# Change virtual desktop. It doesn't replace the original keybinds, as they are
# still useful for changing desktops with the left hand while using the mouse
# with the right hand, but these new shorcuts offer an alternative when both
# hands are resting on the keyboard.
a = A-`
s = A-1
d = A-2
f = A-3
g = A-4
q = A-esc
w = A-f1
e = A-f2
r = A-f3

# Close window.
x = A-f4

# Copy/Paste.
c = C-c
v = C-v

# Undo/Redo.
u = C-z
i = C-y

# Enter
k = enter

# Backspace/delete.
j = backspace
l = delete

[rightExtraLayer+control]
j = C-backspace
l = C-delete

[rightExtraLayer+alt]
j = A-backspace
l = A-delete

###############################################################################

# Layer while while holding the ' key ({ on a spanish keyboard), to have a
# secondary right pinky layer for less common actions. Used for symbols that
# are normally difficult to do on a spanish keyboard.

[rightSymbolsLayer]

# At (@).
q = G-2

# Ampersand (&).
w = S-6

# Percentage (%).
e = S-5

# Caret (^)
r = macro(G-' space)

# Backtick (`).
a = macro(G-\ space)

# Tilde (~)
s = G-4

# Backward slash (\).
d = G--

# Forward slash (/).
f = S-7

###############################################################################

# Shortcuts while holding super/meta, useful to simulate Vim-like movement on
# any application.

[meta]

# Movement with IJKL.
i = up
j = left
k = down
l = right

# Line movement with UO.
u = home
o = end

# Page movement with YH.
y = pageup
h = pagedown

###############################################################################

# Shortcuts while holding ctrl.

[control]
i = up
k = down

###############################################################################

# Shortcuts while holding alt, useful to access a numpad with the letter keys.

[alt]
u = 7
i = 8
o = 9
j = 4
k = 5
l = 6
m = 1
, = 2
. = 3
space = 0
; = .
n = ,

###############################################################################

# Preserve normal functionality while pressing ctrl/alt in combination with
# other modifiers.

[control+shift]
i = C-S-i
k = C-S-k

[control+alt]
i = C-A-i
k = C-A-k

[alt+shift]
u = A-S-u
i = A-S-i
o = A-S-o
j = A-S-j
k = A-S-k
l = A-S-l
m = A-S-m
, = A-S-,
. = A-S-.
space = A-S-space
; = A-S-;
n = A-S-n

[alt+ctrl]
u = A-C-u
i = A-C-i
o = A-C-o
j = A-C-j
k = A-C-k
l = A-C-l
m = A-C-m
, = A-C-,
. = A-C-.
space = A-C-space
